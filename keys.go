// Copyright 2013 The Ebiten Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by genkeys.go using 'go generate'. DO NOT EDIT.

package ebiten

import (
	"github.com/hajimehoshi/ebiten/internal/input"
)

// A Key represents a keyboard key.
// These keys represent pysical keys of US keyboard.
// For example, KeyQ represents Q key on US keyboards and ' (quote) key on Dvorak keyboards.
type Key int

// Keys
const (
	Key0            Key = Key(input.Key0)
	Key1            Key = Key(input.Key1)
	Key2            Key = Key(input.Key2)
	Key3            Key = Key(input.Key3)
	Key4            Key = Key(input.Key4)
	Key5            Key = Key(input.Key5)
	Key6            Key = Key(input.Key6)
	Key7            Key = Key(input.Key7)
	Key8            Key = Key(input.Key8)
	Key9            Key = Key(input.Key9)
	KeyA            Key = Key(input.KeyA)
	KeyB            Key = Key(input.KeyB)
	KeyC            Key = Key(input.KeyC)
	KeyD            Key = Key(input.KeyD)
	KeyE            Key = Key(input.KeyE)
	KeyF            Key = Key(input.KeyF)
	KeyG            Key = Key(input.KeyG)
	KeyH            Key = Key(input.KeyH)
	KeyI            Key = Key(input.KeyI)
	KeyJ            Key = Key(input.KeyJ)
	KeyK            Key = Key(input.KeyK)
	KeyL            Key = Key(input.KeyL)
	KeyM            Key = Key(input.KeyM)
	KeyN            Key = Key(input.KeyN)
	KeyO            Key = Key(input.KeyO)
	KeyP            Key = Key(input.KeyP)
	KeyQ            Key = Key(input.KeyQ)
	KeyR            Key = Key(input.KeyR)
	KeyS            Key = Key(input.KeyS)
	KeyT            Key = Key(input.KeyT)
	KeyU            Key = Key(input.KeyU)
	KeyV            Key = Key(input.KeyV)
	KeyW            Key = Key(input.KeyW)
	KeyX            Key = Key(input.KeyX)
	KeyY            Key = Key(input.KeyY)
	KeyZ            Key = Key(input.KeyZ)
	KeyAlt          Key = Key(input.KeyAlt)
	KeyApostrophe   Key = Key(input.KeyApostrophe)
	KeyBackslash    Key = Key(input.KeyBackslash)
	KeyBackspace    Key = Key(input.KeyBackspace)
	KeyCapsLock     Key = Key(input.KeyCapsLock)
	KeyComma        Key = Key(input.KeyComma)
	KeyControl      Key = Key(input.KeyControl)
	KeyDelete       Key = Key(input.KeyDelete)
	KeyDown         Key = Key(input.KeyDown)
	KeyEnd          Key = Key(input.KeyEnd)
	KeyEnter        Key = Key(input.KeyEnter)
	KeyEqual        Key = Key(input.KeyEqual)
	KeyEscape       Key = Key(input.KeyEscape)
	KeyF1           Key = Key(input.KeyF1)
	KeyF2           Key = Key(input.KeyF2)
	KeyF3           Key = Key(input.KeyF3)
	KeyF4           Key = Key(input.KeyF4)
	KeyF5           Key = Key(input.KeyF5)
	KeyF6           Key = Key(input.KeyF6)
	KeyF7           Key = Key(input.KeyF7)
	KeyF8           Key = Key(input.KeyF8)
	KeyF9           Key = Key(input.KeyF9)
	KeyF10          Key = Key(input.KeyF10)
	KeyF11          Key = Key(input.KeyF11)
	KeyF12          Key = Key(input.KeyF12)
	KeyGraveAccent  Key = Key(input.KeyGraveAccent)
	KeyHome         Key = Key(input.KeyHome)
	KeyInsert       Key = Key(input.KeyInsert)
	KeyLeft         Key = Key(input.KeyLeft)
	KeyLeftBracket  Key = Key(input.KeyLeftBracket)
	KeyMinus        Key = Key(input.KeyMinus)
	KeyPageDown     Key = Key(input.KeyPageDown)
	KeyPageUp       Key = Key(input.KeyPageUp)
	KeyPeriod       Key = Key(input.KeyPeriod)
	KeyRight        Key = Key(input.KeyRight)
	KeyRightBracket Key = Key(input.KeyRightBracket)
	KeySemicolon    Key = Key(input.KeySemicolon)
	KeyShift        Key = Key(input.KeyShift)
	KeySlash        Key = Key(input.KeySlash)
	KeySpace        Key = Key(input.KeySpace)
	KeyTab          Key = Key(input.KeyTab)
	KeyUp           Key = Key(input.KeyUp)
	KeyMax          Key = KeyUp
)
